pipeline {
    
    agent none

    environment {
        AWS_ACCOUNT_ID = "345002264488"
        AWS_DEFAULT_REGION = "us-west-2"
        IMAGE_REPO_NAME = "abaqus/allgeo-hello-world-jar"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
        CURRENT_VERSION = "develop"
        NEXT_VERSION = "develop"
        IMAGE_TAG = "develop"
    }

    options {
        skipStagesAfterUnstable()
    }


    stages {
            // main stage group of 2 parallel stages
        stage("MAIN Build and code test a Java Maven project") {
            parallel {
                stage("Build Code - Branch 1") {
                    agent {
                        label "built-in"
                    }
                    // build java with Maven
                    stages {

                        stage('Build') {
                            steps {                
                                echo "current vesion = ${CURRENT_VERSION}"
                                echo "next version = ${NEXT_VERSION}"
                                //sh 'mvn -B -DskipTests clean package'
                            }
                        }
                        /*stage('Test') {
                            steps {
                                sh 'mvn test'
                            }
                            post {
                                always {
                                   junit 'target/surefire-reports/*.xml'
                                }
                            }
                        }
                        stage('Deploy') { 
                            steps {
                               sh './jenkins/scripts/deliver.sh' 
                            }
                        }  */                                               
                    }
                }

                stage("Build Code - Branch 2") {
                    agent {
                        label "sonarqube"
                    }

                    stages {

                        stage('Validate Apps Installed') {
                            steps {                
                                echo "Start"
                                sh "uname -a"
                                
                                echo "github version"
                                sh "git --version"

                                echo "sonarqube status"
                                sh "/opt/sonarqube/bin/linux-x86-64/sonar.sh status"

                                echo "sonar scanner version"
                                sh "/opt/sonar-scanner/bin/sonar-scanner -v"
                            }
                        }

                        stage('Run Sonar Scanner') {
                            steps { 
                                sh '''
                                    #!/bin/bash  
                                    echo Run Sonnar Scanner Maven
                                    mvn sonar:sonar -Dsonar.projectKey=sonar-maven-test -Dsonar.host.url=http://localhost:9000 -Dsonar.login=b947047fc366de6095fa0ac8c2b610d7c6cf84d6
                                '''  
                            }
                        }

                        stage('Generate Reports') {
                            steps { 
                                /*script {
                                def exists = fileExists '/reports'
                                  if (exists) {
                                        sh "/reports already exists"
                                    } else {
                                         sh "sudo mkdir reports"
                                    }
                                }*/
                                sh '''
                                    #!/bin/bash
                                    cd ${WORKSPACE}"/reports"
                                    java -jar /opt/sonarqube/extensions/plugins/sonar-  -report-4.1.2.jar -t b947047fc366de6095fa0ac8c2b610d7c6cf84d6 -p sonar-maven-test
                                '''  
                            }
                        }                                            
                    }
                }
            }
        }
    }
}
