pipeline {
    agent any {
        docker {
            image 'maven:3-alpine'
            args '-v /root/.m2:/root/.m2'
        }
    }
    stage('Snyk') {
      steps {
        echo 'Testing Snyk...'
        snykSecurity(
          snykInstallation: 'Snyk@latest',
          snykTokenId: 'organisation-snyk-api-token',
          // place other parameters here
            )
          }
        }
    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        stage("Build Jar"){
            steps{
                sh 'cd syft-grype && ./mvnw clean install -Dcheckstyle.skip=true -Dmaven.test.skip=true'
            }
        }
        stage("Build Container"){
            steps{
                sh 'docker build --build-arg JAR_FILE=syft-grype/target/syft-grype-0.0.1-SNAPSHOT.jar -t app:${BUILD_NUMBER} .'
            }
        }
        stage("Generate Software Bill of Materials (sbom) with Syft"){
            steps{
                sh '''
                    curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin
                    syft app:${BUILD_NUMBER} --scope all-layers -o json > sbom-${BUILD_NUMBER}.json
                    syft app:${BUILD_NUMBER} --scope all-layers -o table > sbom-${BUILD_NUMBER}.txt
                '''
            }
        }
        stage("Cleanup") {
            steps {
                archiveArtifacts allowEmptyArchive: true, artifacts: 'sbom*', fingerprint: true, followSymlinks: false, onlyIfSuccessful: true
                sh '''
                    rm -rf sbom*
                '''
            }
        }
        }
    }
}
