name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: ghcr.io/caesarh287/hello-world
  PROD_IP: 52.90.41.120
  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Get new version
        id: version
        run: echo "new_version=$(./update_version.sh)" >> $GITHUB_OUTPUT

      - name: Set image name
        id: image_name
        run: echo "image_name=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout):${{steps.version.outputs.new_version}}" >> $GITHUB_OUTPUT
        
      - name: Bump new version
        run: |
          REPO="https://$GITHUB_ACTOR:$TOKEN@github.com/$GITHUB_REPOSITORY.git"
          mvn -q versions:set -DnewVersion="${{steps.version.outputs.new_version}}"        
        
      - uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 5
      - run: |
          set -x
          docker version
          docker run --rm hello-world

      - name: Test with Maven
        run: docker build --target maven-test .
        
      - name: Build with Maven
        run: docker build --target production -t ${{ env.IMAGE_NAME }}:${{steps.image_name.outputs.image_name}} .     
          
      - name: Update Patch Version
        run: |
          git config --global user.email "<>"
          git config --global user.name "${{github.actor}}"
          git add ./pom.xml
          git commit -m "Release ${{steps.version.outputs.new_version}}"
          git tag ${{steps.version.outputs.new_version}}
          git push --follow-tags
          git push --tags
          
      - name: Login and Publish to GitHub Container Registry
        run: |
          docker login ghcr.io --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
          docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Deploy to EC2 with SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.PROD_IP }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo docker kill prod-app &>/dev/null || true
            sudo docker rm prod-app &>/dev/null || true
            sudo docker pull ghcr.io/caesarh287/hello-world
            sudo docker run -d --name prod-app ${{ env.IMAGE_NAME }}


