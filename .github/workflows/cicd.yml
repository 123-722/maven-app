name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Update version
      id: update_version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        PATCH=$(echo $VERSION | cut -d'.' -f3)
        NEW_PATCH=$((PATCH+1))
        NEW_VERSION=$(echo $VERSION | sed "s/$PATCH\$/$NEW_PATCH/")
        mvn versions:set -DnewVersion=$NEW_VERSION
        echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Commit and push new version
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git commit -am "Update version to ${{ env.new_version }}"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: target/*.jar

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/simple-java-maven-app:${{ env.new_version }}
