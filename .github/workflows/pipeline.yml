name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-jar:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          # adoptopenjdk

      - name: Build with Maven
        run: mvn -B clean package

      - name: Increment Maven version
        run: mvn versions:set -DnewVersion=1.0.$(($(mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-.*//' | awk '{print int($0)}') + 1))

      - name: Commit version change
        run: |
          if git diff --quiet; then
          echo "No changes to commit"
          else
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -am "Increment version"
          git push
          fi

  build-push-docker:
    needs: build-jar
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}


      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: yossizxc/java:my-app

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Get EC2 instance ID using tags
        id: get-instance-id
        run: |
          instance_id=$(aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=production" "Name=instance-state-name,Values=running" \
          --query 'Reservations[].Instances[].InstanceId' --output text)
          echo "::set-output name=instance_id::$instance_id"

      - name: Run commands on EC2 instance using AWS SSM Session Manager
        run: |
          aws ssm start-session \
            --target "${{ steps.get-instance-id.outputs.instance_id }}" \
            --document-name AWS-StartInteractiveCommand \
            --parameters "command='docker pull yossizxc/java:my-app && \
                                   docker run -d --name my-app yossizxc/java:my-app'"

