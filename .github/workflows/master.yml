name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - feature

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Fetch all branches and tags
        run: git fetch --prune --unshallow

      - name: Determine Branch and Commit Count
        id: determine_branch_and_commit_count
        run: |
          BRANCH=$(echo "${{ github.ref }}" | awk -F'/' '{print $NF}')
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          MAJOR_VERSION=$(echo $CURRENT_VERSION | cut -d'.' -f1)
          MINOR_VERSION=$(echo $CURRENT_VERSION | cut -d'.' -f2)
          PATCH_VERSION=$(echo $CURRENT_VERSION | cut -d'.' -f3)
          if [ "$BRANCH" = "master" ]; then
            NEW_VERSION=$(($MAJOR_VERSION + 1)).0.0
          elif [[ "$BRANCH" == "feature"* ]]; then
            NEW_VERSION=$MAJOR_VERSION.$(($MINOR_VERSION + 1)).0
          elif [[ "$BRANCH" == "fixes"* ]]; then
            NEW_VERSION=$MAJOR_VERSION.$MINOR_VERSION.$(($PATCH_VERSION + 1))
          else
            echo "::error::Unsupported branch"
            exit 1
          fi
          mvn versions:set -DnewVersion=$NEW_VERSION -DgenerateBackupPoms=false
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git commit -am "Bump version to $NEW_VERSION"
          git push origin master
          echo "::set-output name=NEW_VERSION::$NEW_VERSION"


      - name: Build Docker Image
        run: |
          docker build -t simple-java-maven-app:latest --build-arg RUN_NUMBER=${NEW_VERSION} .
          
      - name: Push Docker Image
        run: |
          docker login -u ${{ secrets.DOCKER_EMAIL }} -p ${{ secrets.DOCKER_HUB }}
          docker tag simple-java-maven-app:latest denisiuss/simple-java-maven-app:latest
          docker push denisiuss/simple-java-maven-app:latest
          
      - name: SSH into EC2 Instance and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ec2-18-184-208-89.eu-central-1.compute.amazonaws.com
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            docker stop simple-app || true
            docker rm simple-app || true
            docker run -d --name simple-app -p 8080:8080 denisiuss/simple-java-maven-app:latest
  
