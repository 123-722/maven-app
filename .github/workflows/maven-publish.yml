name: GitHub Actions CI/CD

on:
  pull_request:
    types:
      - closed
    branches:
      - master
      - dev

  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step to determine the current version
      - name: Read current version
        id: current_version
        run: |
          current_version=$(cat version.txt)
          echo "Current version: $current_version"
          echo "current_version=$current_version" >> $GITHUB_OUTPUT

      # Step to determine version increment type
      - name: Determine version increment type
        id: determine_version_type
        run: |
          # Check if the pull request was merged
          if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
            base_branch="${{ github.event.pull_request.base.ref }}"
            head_branch="${{ github.event.pull_request.head.ref }}"

            # Determine the type of version increment needed
            if [[ "$base_branch" == "master" ]]; then
              if [[ "$head_branch" =~ ^hotfix/ ]]; then
                echo "version_increment_type=patch" >> $GITHUB_OUTPUT
              else
                echo "version_increment_type=major" >> $GITHUB_OUTPUT
              fi
            elif [[ "$base_branch" == "dev" ]]; then
              echo "version_increment_type=minor" >> $GITHUB_OUTPUT
            else
              echo "version_increment_type=none" >> $GITHUB_OUTPUT
            fi
          else
            echo "version_increment_type=none" >> $GITHUB_OUTPUT
          fi

      - name: Increment version
        id: new_version
        run: |
          current_version="${{ steps.current_version.outputs.current_version }}"
          IFS='.' read -ra ver <<< "$current_version"
          major=${ver[0]}
          minor=${ver[1]}
          patch=${ver[2]}
          version_increment_type="${{ steps.determine_version_type.outputs.version_increment_type }}"

          if [[ "$version_increment_type" == "major" ]]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [[ "$version_increment_type" == "minor" ]]; then
            minor=$((minor + 1))
            patch=0
          elif [[ "$version_increment_type" == "patch" ]]; then
            patch=$((patch + 1))
          fi

          new_version="$major.$minor.$patch"
          if [[ "$new_version" != "" && "$new_version" != "$current_version" ]]; then
            echo "New version: $new_version"
            echo $new_version > version.txt
            echo "new_version=$new_version" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push the new version file
        if: steps.new_version.outcome == 'success' # Ensure this step runs only if Increment version was successful
        run: |
          new_version="${{ steps.new_version.outputs.new_version }}"
          if [[ "$new_version" != "" && "$new_version" != "${{ steps.current_version.outputs.current_version }}" ]]; then
            git config --local user.name "GitHub Actions"
            git config --local user.email "actions@github.com"
            git add version.txt
            git commit -m "Bump version to $new_version"
            git push origin master
          fi

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: VERSION=${{ steps.new_version.outputs.new_version }}
          tags: ${{ env.DOCKER_REPO }}:${{ env.IMAGE_NAME }}-${{ steps.new_version.outputs.new_version }}
        env:
          IMAGE_NAME: simple-maven
          DOCKER_REPO: zivgl66/ziv-repo
