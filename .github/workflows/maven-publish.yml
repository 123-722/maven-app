name: Maven Package

on:
  push:
    branches:
      - main
      - '**'
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github 
        settings-path: ${{ github.workspace }} 

    - name: Install Maven 3.9.2
      run: |
        wget https://archive.apache.org/dist/maven/maven-3/3.9.2/binaries/apache-maven-3.9.2-bin.tar.gz
        tar -xzf apache-maven-3.9.2-bin.tar.gz
        sudo mv apache-maven-3.9.2 /usr/local/apache-maven
        sudo rm /usr/bin/mvn # Remove the existing symbolic link
        sudo ln -s /usr/local/apache-maven/bin/mvn /usr/bin/mvn

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get the current version
      id: get_version
      run: |
        VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
        if [ -z "$VERSION" ]; then
          VERSION="0.0.0"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Bump version
      id: bump_version
      run: |
        VERSION=${{ env.VERSION }}
        IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
        case ${{ github.event.inputs.version_bump }} in
          major)
            VERSION_PARTS[0]=$((VERSION_PARTS[0] + 1))
            VERSION_PARTS[1]=0
            VERSION_PARTS[2]=0
            ;;
          minor)
            VERSION_PARTS[1]=$((VERSION_PARTS[1] + 1))
            VERSION_PARTS[2]=0
            ;;
          patch)
            VERSION_PARTS[2]=$((VERSION_PARTS[2] + 1))
            ;;
          *)
            echo "Invalid VERSION_BUMP: ${{ github.event.inputs.version_bump }}"
            exit 1
            ;;
        esac
        NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

    - name: Create new tag
      run: |
        git config --global user.email "you@example.com"
        git config --global user.name "GitHub Actions"
        git tag ${{ env.NEW_VERSION }}
        git push origin ${{ env.NEW_VERSION }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          ${{ secrets.DOCKER_USERNAME }}/my-app:${{ env.NEW_VERSION }}
