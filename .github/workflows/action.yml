env:
  STACK: java
  BUILD_TECH: java_maven
  MVN_ARGS: --batch-mode --update-snapshots verify
  CONTINUE_ON_ERROR: false
  CONTINUE_ON_ERROR_SETUP: true

#on: [push]
# Define on which event the pipeline will be triggered
on:
  push:
  # and the target with some regex to match specific  branch names
    branches:
      - master
      - 'FEATURE-[0-9]-[0-9]-[0-9]-X-BRANCH'
      - '[0-9]_[0-9]_x'
      - '[0-9]-[0-9]-X-BRANCH'
  pull_request:
    branches:
      - master
      - 'FEATURE-[0-9]-[0-9]-[0-9]-X-BRANCH'
      - '[0-9]_[0-9]_x'
      - '[0-9]-[0-9]-X-BRANCH'

jobs:
  build_java_maven:

    runs-on: ubuntu-latest 
    
    steps:
    ######## Checkout code ########
      - name: 'Checkout repository on branch: ${{ github.REF }}'
        uses: actions/checkout@v2
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        with:
          ref: ${{ github.REF }}
          fetch-depth: 0
#      - name: show job status
#        if: always()
#        run: echo ${{ job.status }}
      - name: fail the job
        run: exit 1
      ######## Setup JDK 11 ########
      - name: Set up JDK 11
        id: setup_jdk
        if: ${{ env.STACK == 'java' }}
        uses: actions/setup-java@v2
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
        with:
          java-version: '11'
          distribution: 'adopt'
          
#      - name: Print Setup status
#        run: echo ${{ steps.setup_jdk.outcome }}
        
      ######## Build - Maven ########
      - name: Build with Maven
        if: ${{ env.BUILD_TECH == 'java_maven' }}
        run: mvn ${{ env.MVN_ARGS }}
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
    
      ######## Build - Ant ########
      - name: Build with Ant
        if: ${{ env.BUILD_TECH == 'java_ant' }}
        run: ant -noinput -buildfile build.xml
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}
    
    
      ######## Build - Gradle ########
      - name: Validate Gradle wrapper
        if: ${{ env.BUILD_TECH == 'java_gradle' }}
        uses: gradle/wrapper-validation-action@v1
        continue-on-error: ${{ env.CONTINUE_ON_ERROR_SETUP }}

      - name: Build with Gradle
        if: ${{ env.BUILD_TECH == 'java_gradle' }}
        run: ./gradlew build
        continue-on-error: ${{ env.CONTINUE_ON_ERROR }}

      ######## Setuo .Net  ########
      - name: Setup .NET 3.x
        if: ${{ env.STACK == 'dotnet' }}
        uses: actions/setup-dotnet@v1
        continue-on-error: ${{ env.CONTINUE_ON_ERROR_SETUP }}
        with:
          dotnet-version: '3.x'

      ######## Sonar Cloud Scan ########
  sonarcloud:
  
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - name: SonarCloud Scan
        run: mvn -B sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=pintu-gupta-github -Dsonar.projectKey=pintu-gupta-github
        #uses: sonarsource/sonarcloud-github-action@master
        #with:
        #  args: >
        #    -Dsonar.language=java
        #    -Dsonar.host.url=https://sonarcloud.io
        #    -Dsonar.organization=pintu-gupta
        #    -Dsonar.projectKey=pintu-gupta-github
        #    -Dsonar.projectName=simple-java-maven-app
        #    -Dsonar.projectVersion=1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
