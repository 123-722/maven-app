env:
  STACK: java
  BUILD_TECH: java_maven

on: [push]

jobs:
  build_java_maven:

    runs-on: ubuntu-latest 
    
    steps:
    ######## Checkout code ########
      - uses: actions/checkout@v2
      
    
      ######## Setup JDK 11 ########
      - name: Set up JDK 11
        if: ${{ env.STACK == 'java' }}
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          
    
      ######## Build - Maven ########
      - name: Build with Maven
        if: ${{ env.BUILD_TECH == 'java_maven' }}
        run: mvn --batch-mode --update-snapshots verify
        
    
      ######## Build - Ant ########
      - name: Build with Ant
        if: ${{ env.BUILD_TECH == 'java_ant' }}
        run: ant -noinput -buildfile build.xml
    
    
      ######## Build - Gradle ########
      - name: Validate Gradle wrapper
        if: ${{ env.BUILD_TECH == 'java_gradle' }}
        uses: gradle/wrapper-validation-action@v1
        
      - name: Build with Gradle
        if: ${{ env.BUILD_TECH == 'java_gradle' }}
        run: ./gradlew build
    
      ######## Setuo .Net  ########
      - name: Setup .NET 3.x
        if: ${{ env.STACK == 'dotnet' }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.x'

      ######## Sonar Cloud Scan ########
  sonarcloud:
  
    runs-on: ubuntu-latest 
    steps:
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=my-organization
            -Dsonar.projectKey=simple-java-maven-app
            -Dsonar.sources=lib/
            -Dsonar.test.exclusions=tests/**
            #-Dsonar.tests=tests/
            -Dsonar.verbose=true
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
